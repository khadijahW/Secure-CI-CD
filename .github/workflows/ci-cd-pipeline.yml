name: Secure CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  secure-scan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from GitHub repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (required for SonarQube and Dependency-Check)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11

      # Step 3: Install SonarQube Scanner
      - name: Install Sonar Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner-cli-5.0.1.3006-linux.zip -d $HOME
          echo "export PATH=$HOME/sonar-scanner-5.0.1.3006-linux/bin:\$PATH" >> $GITHUB_ENV

      # Step 4: Run SonarQube Analysis
      - name: Run SonarQube Analysis
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.sources=. \
            -Dsonar.host.url=http://<SonarQube-IP>:9000 \
            -Dsonar.login=${{SONAR_TOKEN }}

      # Step 5: Install Snyk CLI
      - name: Install Snyk CLI
        run: npm install -g snyk

      # Step 6: Run Snyk Vulnerability Scan
      - name: Test for vulnerabilities with Snyk
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: snyk test --all-projects

      # Step 7: Install OWASP Dependency-Check
      - name: Install Dependency-Check
        run: |
          wget https://dl.bintray.com/jeremy-long/owasp-dependency-check/5.3.2/dependency-check-5.3.2-release.zip
          unzip dependency-check-5.3.2-release.zip
          export PATH=$PWD/dependency-check/bin:$PATH

      # Step 8: Run OWASP Dependency-Check
      - name: Run Dependency-Check
        run: dependency-check --scan . --out ./dependency-check-report --format HTML
